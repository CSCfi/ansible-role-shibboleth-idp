- name: Configurable | OIDCStepUpServer | dependency | oidc
  include: oidc.yml
  when: "'oidc' not in confs"

- name: Configurable | OIDCStepUpServer | Download | Plugin v{{ shibbolethidp_oidcstepupserver_version }}
  unarchive:
    extra_opts: ['--strip-components=1']
    src: "{{ shibbolethidp_oidcstepupserver_location }}/releases/download/v{{ shibbolethidp_oidcstepupserver_version }}/idp-stepup-distribution-{{ shibbolethidp_oidcstepupserver_version | regex_replace('[^0-9RC.-]', '') }}-bin.tar.gz"
    remote_src: yes
    dest: "{{ shibbolethidp_idp_home }}"
    creates: "{{ shibbolethidp_idp_home }}/edit-webapp/WEB-INF/lib/idp-stepup-api-{{ shibbolethidp_oidcstepupserver_version | regex_replace('[^0-9RC.-]', '') }}.jar"
  notify: reown shibboleth-idp

- name: Configurable | OIDCStepUpServer | Detect | Duplicate | Plugins
  find:
    paths: "{{ shibbolethidp_idp_home }}/edit-webapp/WEB-INF/lib"
    patterns: "^(?!.*({{ shibbolethidp_oidcstepupserver_version | regex_replace('[^0-9RC.-]', '') }})).*idp-stepup"
    use_regex: true
  register: files_to_delete

- name: Configurable | OIDCStepUpServer | Delete | Older | Plugins
  file:
    path: "{{ shibbolethidp_item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"
  loop_control:
    loop_var: shibbolethidp_item

#- name: Shibboleth IdP | OIDC | Import OIDC extension configuration files
# =======================================================================

- name: Configurable | OIDCStepUpServer | Configure | Flow | Insert | general-authn.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/authn/general-authn.xml"
    marker: "    <!-- {mark} ansible managed - stepup-flow -->"
    insertafter: 'default-destroy-method="destroy"'
    content: |2
        <util:list id="shibboleth.AvailableAuthenticationFlows">

        <!-- Custom authentication flow -->
        <bean id="authn/Stepup" parent="shibboleth.AuthenticationFlow" p:passiveAuthenticationSupported="false" p:forcedAuthenticationSupported="true" >
          <property name="supportedPrincipals">
            <list>
              <bean parent="shibboleth.OIDCAuthnContextClassReference" c:classRef="https://refeds.org/profile/mfa"/>
              <bean parent="shibboleth.SAML2AuthnContextClassRef" c:classRef="https://refeds.org/profile/mfa"/>
            </list>
          </property>
        </bean>
        </util:list>

- name: Configurable | OIDCStepUpServer | authn.properties
  lineinfile: dest={{ shibbolethidp_idp_home }}/conf/authn/authn.properties regexp="^#?\s*({{ item_stepup.option }}\s*=)" backrefs=yes  line="\\1 {{ item_stepup.value }}"
  with_items:
    - { option: 'idp.authn.MFA.supportedPrincipals', value: "saml2/https://refeds.org/profile/mfa, oidc/https://refeds.org/profile/mfa", state: present }
  loop_control:
    loop_var: item_stepup

- name: Configurable | OIDCStepUpServer | stepup.properties
  lineinfile: dest={{ shibbolethidp_idp_home }}/conf/authn/stepup.properties regexp="^#?\s*({{ item_stepup.option }}\s*=)" backrefs=yes  line="\\1 {{ item_stepup.value }}"
  with_items:
    - { option: 'stepup.authenticationManager', value: "{{ shibbolethidp_oidcstepupserver_stepup_authenticationManager }}", state: present }
    - { option: 'stepup.attributedecryptor.key', value: "{{ shibbolethidp_oidcstepupserver_stepup_attributedecryptor_key }}", state: present }
  loop_control:
    loop_var: item_stepup

- name: Configurable | OIDCStepUpServer | Configure | Flows | idp.properties
  lineinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/idp.properties"
    regexp: ^(?!.*{{ shibbolethidp_item }})(idp.authn.flows=.*)$
    line: \1|{{ shibbolethidp_item }}
    backrefs: yes
  with_items: Password|MFA
  loop_control:
    loop_var: shibbolethidp_item
  notify:
    - restart shibboleth-idp
