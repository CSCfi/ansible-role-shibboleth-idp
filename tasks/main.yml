---
# tasks file for shibboleth-idp
- name: Shibboleth IdP | Initialize | {{ shibbolethidp_fqdn }}
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}.yml"
    - "default.yml"
  when: __shibbolethidp_packages is not defined or shibbolethidp_service_name is not defined

- name: Shibboleth IdP | Define | Packages
  set_fact:
    shibbolethidp_packages: "{{ __shibbolethidp_packages | list }}"
  when: shibbolethidp_packages is not defined

- name: Shibboleth IdP | Install | Packages
  package: name={{ item }} state={{ shibbolethidp_state }}
  with_items: "{{ shibbolethidp_packages }}"

- name: Shibboleth IdP | Download | Unarchive
  unarchive:
    src: https://shibboleth.net/downloads/identity-provider/{{ shibbolethidp_version }}/shibboleth-identity-provider-{{ shibbolethidp_version }}.tar.gz
    dest: "{{ shibbolethidp_dst_dir }}"
    remote_src: True

- name: Shibboleth IdP | Templates | copy
  template: src={{ item.src }} dest={{ item.dst }}/{{ item.src }}
  with_items:
    - { src: idp.merge.properties, dst: /tmp }
    - { src: idp-schema.sql, dst: /tmp }
    - { src: shibboleth-idp, dst: /etc/default }
    - { src: shibboleth-idp.service, dst: /etc/systemd/system }

- name: Shibboleth IdP | Install
  shell: "source /etc/default/shibboleth-idp && {{ shibbolethidp_dst_dir }}/shibboleth-identity-provider-{{ shibbolethidp_version }}/bin/install.sh \
  -Didp.property.file=/tmp/idp.install.properties \
  -Didp.merge.properties=/tmp/idp.merge.properties \
  -Didp.src.dir={{ shibbolethidp_dst_dir }}/shibboleth-identity-provider-{{ shibbolethidp_version }} \
  -Didp.target.dir={{ shibbolethidp_idp_home }} \
  -Didp.scope={{ shibbolethidp_scope }} \
  -Didp.host.name={{ shibbolethidp_fqdn }} \
  -Didp.sealer.password={{ shibbolethidp_keystore_password }} \
  -Didp.keystore.password={{ shibbolethidp_keystore_password }} \
  -Didp.noprompt=true"
#  -Didp.jetty.config=true"
  args:
    executable: /bin/bash
    creates: "{{ shibbolethidp_idp_home }}"

- include_vars: "Extra.yml"

- name: Shibboleth IdP | jetty_base logs | directory | create
  file: path={{ shibbolethidp_jetty_base }}/logs state=directory mode=0775 owner=jetty group=jetty

- name: Shibboleth IdP | jetty_base | directories | create
  file: path={{ item.dst }} state=directory owner=jetty group=jetty mode=0755
  with_items:
    - "{{ jetty_jars }}"
    - "{{ shibbolethidp_jars }}"
  when: (jetty_jars is defined and jetty_jars|length>0) and (shibbolethidp_jars is defined and shibbolethidp_jars|length>0)


- name: Shibboleth IdP | jetty_base | create | system.d
  shell: . /etc/default/shibboleth-idp && java -jar $JETTY_HOME/start.jar --create-startd
  args:
    chdir: "{{ shibbolethidp_jetty_base }}"
    creates: "{{ shibbolethidp_jetty_base }}/start.d"

- name: Shibboleth IdP | jetty_base | configure | modules | {{ shibbolethidp_jetty_modules }}
  shell: . /etc/default/shibboleth-idp && java -jar $JETTY_HOME/start.jar --add-to-start="{{ shibbolethidp_jetty_modules | join(',') }}"
  args:
    chdir: "{{ shibbolethidp_jetty_base }}"
    creates: "{{ shibbolethidp_jetty_base }}/start.d/ssl.ini"

- name: Shibboleth IdP | Jetty | Configure
  lineinfile: dest={{ item.dst }} regexp="^#?\s*({{ item.name }}\s*=)" backrefs=yes  line="\\1 {{ item.value }}"
  with_items: "{{ jetty_configurator }}"

- name: Shibboleth IdP | download | Extra
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dst }}"
    mode: 0644
  with_items:
    - "{{ jetty_jars }}"
    - "{{ shibbolethidp_jars }}"
  when: (jetty_jars is defined and jetty_jars|length>0) and (shibbolethidp_jars is defined and shibbolethidp_jars|length>0)


- name: Shibboleth IdP | Templates | copy
  template: src={{ item.src }} dest={{ item.dst }}
  with_items:
    - { src: idp.xml, dst: "{{ shibbolethidp_jetty_base }}/webapps/idp.xml" }
    - { src: attribute-resolver.xml, dst: "{{ shibbolethidp_idp_home }}/conf/attribute-resolver-haka.xml" }
    - { src: attribute-filter.xml, dst: "{{ shibbolethidp_idp_home }}/conf/attribute-filter-haka.xml" }
    - { src: tweak-ssl.xml, dst: "{{ shibbolethidp_jetty_base }}/etc/tweak-ssl.xml" }

#    - { src: jetty-requestlog.xml, dst: "{{ shibbolethidp_jetty_base }}/etc" }
#    - { src: logback-access.xml, dst: "{{ shibbolethidp_jetty_base }}/resources" }
#    - { src: logback.xml, dst: "{{ shibbolethidp_jetty_base }}/resources" }

- name: Copy config files for services
  copy: src={{ item.src }} dest={{ item.dst }} remote_src=yes
  with_items:
    - { src: "{{ shibbolethidp_jetty_home }}/etc/jetty-ssl-context.xml", dst: "{{ shibbolethidp_jetty_base }}/etc/" }

- name: Shibboleth-idp | JETTY | SSL | enable | tweak-ssl.xml
  lineinfile:
    dest: "{{ shibbolethidp_jetty_base }}/start.d/https.ini"
    regexp: '^etc'
    insertafter: '--module=https'
    line: 'etc/tweak-ssl.xml'

- file: path={{ shibbolethidp_idp_home }}/logs state=directory owner=jetty group=jetty recurse=yes
- file: path={{ shibbolethidp_idp_home }}/conf state=directory owner=root group=jetty recurse=yes mode=0750
- file: path={{ shibbolethidp_idp_home }}/credentials state=directory owner=root group=jetty recurse=yes mode=0750
- file: path={{ shibbolethidp_idp_home }}/jetty-base/logs state=directory owner=jetty group=jetty recurse=yes

- name: Symlink | create | logs
  file:
    src="{{ shibbolethidp_idp_home }}/logs"
    dest=/var/log/shibboleth-idp
    state=link

- name: Symlink | create | logs
  file:
    src="{{ shibbolethidp_idp_home }}/jetty-base/logs"
    dest=/var/log/jetty
    state=link
    force=yes

- name: Enable service shibboleth
  service: name=shibboleth-idp enabled=yes state=started

- name: Shibboleth IdP | Rebuild
  shell: "source /etc/default/shibboleth-idp && {{ shibbolethidp_idp_home }}/bin/build.sh -Didp.target.dir={{ shibbolethidp_idp_home }}"
  args:
    executable: /bin/bash
  notify: restart shibboleth-idp

- name: Set logging to debug if configured | shibholethidp_debug = {{ shibbolethidp_debug }}
  xml:
    xpath: "//configuration/variable[@name='idp.loglevel.idp']"
    ensure: present
    attribute: value
    value: "DEBUG"
    file: "{{ shibbolethidp_idp_home }}/conf/logback.xml"
  when: shibbolethidp_debug is defined and shibbolethidp_debug == true

- xml:
    xpath: "//configuration/logger[@name='fi.mpass' and @level='debug']"
    ensure: present
    file: "{{ shibbolethidp_idp_home }}/conf/logback.xml"
  when: shibbolethidp_debug is defined and shibbolethidp_debug == true

- include: shibbolethidp_{{ item }}.yml
  with_items: "{{ configurables }}"
  when: configurables is defined

